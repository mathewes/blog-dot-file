digraph G{
	node1[label="RunScript"];
	node2[label="OpCode"];
	node3[label="Binary \noperation"];
	node4[label="Unary \noperation"];
	node5[label="String \nProcessing"];
	node6[label="Conditional\nBranching"];
	node7[label="Stack"];
	node8[label="FuncCall"];
	node1->node2;
	node2->{node3;node4;node5;node6;node7;node8};

	node31[label="Move"];
	node32[label="ADD(SUB..)"];
	node33[label="BitWise"];
	node3->{node31;node32;node33};

	node9[label="ResolveOpValue"];
	node91[label="ResolveOpValue"];
	node10[label="ResolveOpPntr"];
	node11[label="PrintOpIndir"];
	node12[label="PrintOpValue"];
	{node31;node32;node33}->node9->node91->node10->node11->node12;

	node71[label="PUSH"];
	node72[label="POP"];
	node7->{node71;node72};

	node81[label="CALL"];
	node82[label="RET"];
	node8->{node81;node82};

	node811[label="Push"];
	node812[label="PushFrame"];
	node813[label="SetStackValue"];
	node81->node811->node812->node813;

	node821[label="Pop"];
	node822[label="GetStackValue"];
	node823[label="PopFrame"];
	node82->node821->node822->node823;
};