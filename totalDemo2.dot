digraph TotalG{
	node1[label=Exp];
	node2[label=SubExp];
	node3[label=Term];
	node4[label=Factor];
	node1->node2;node2->node3;node3->node4;

	node18[label=Exp];
	node19[label=SubExp];
	node20[label="Opearor for \nOpRelation or OpLogic"];
	node21[label=SubExp];
	node18->node19;
	node19->node20;
	node20->node21;
	node21->node19;

	node14[label=SubExp];
	node15[label=Term];
	node16[label="Opearor for add\n sub or concat"];
	node17[label=Term];
	node14->node15;
	node15->node16;
	node16->node17;
	node17->node15;

	node51[label=Term];
	node5[label=Factor];
	node6[label="Opearor for mul, div\nbitwise or others"];
	node7[label=Factor];
	node51->node5;
	node5->node6;
	node6->node7;
	node7->node5;

	node8[label=Factor];
	node29[label="Judge first \ndata operator\n like -3 or !3"]
	node9[label=Int];
	node10[label=Float];
	node11[label=Ident];
	node12[label=Open_Paren];
	node13[label=SubExp];
	node34[label=VarSymbol];
	node35[label=FuncSymbol];
	node30[label="["];
	node31[label=Exp];
	node32[label="]"];
	node33[label="Not Array"];
	node36[label=FuncCall];

	node8->node29;
	node29->{node9;node10;node11;node12};
	node12->node13;
	node11->{node34;node35};
	node34->{node30;node33};
	node30->node31;
	node31->node32;
	node35->node36;

	node22[label=flow];
	node23[label=push];
	node24[label=push];
	node25[label=pop];
	node26[label=pop];
	node27[label=Opearor];
	node28[label=push];
	node22->node23->node24->node25->node26->node27->node28;
}